{"version":3,"sources":["components/Header/SearchBar/SearchBar.js","components/Header/Header.js","components/Loading.js","components/ImgLoader.js","components/List/ListItem.js","components/List/List.js","pages/HomePage.js","components/MovieCard/MovieCard.js","pages/ListPage.js","hooks/FetchingData.js","pages/SearchPage.js","components/Details/NoDetails.js","components/Details/PlotDetails.js","components/Details/GenresDetails.js","components/Details/PersonLinkDetails.js","components/Details/CastDetails.js","pages/MovieDetailsPage.js","pages/SeriesDetailsPage.js","pages/PersonDetailsPage.js","pages/ErrorPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","useState","searchValue","setSearchValue","searchType","setSearchType","Container","className","FormControl","onChange","e","target","value","as","placeholder","Button","onClick","preventDefault","search","variant","withRouter","detailsStyle","noSearch","test","document","URL","Navbar","sticky","expand","bg","exact","to","title","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","activeKey","activeClassName","window","history","back","loading","ImgLoader","alt","imgSrc","generateCustomPlaceholderURL","width","height","textColor","text","src","styled","type","placeholderSrc","listItem","movieTitle","link","movieID","date","releaseDate","seriesTitle","fisrtAirDate","ListGroup","Item","img","moment","format","List","listItems","data","number","slice","map","index","ListItem","key","poster_path","release_date","first_air_date","original_name","Loading","HomePage","Fragment","Row","Col","sm","md","upcomingMoviesData","results","nowPlayingMoviesData","popularSeriesData","popularMoviesData","MovieCard","card","poster","name","profile_path","Card","Body","Text","ListPage","listData","xs","lg","FetchingData","urlParams","response","setResponse","error","setError","setLoading","OMDB","process","imdbID","detailsID","queryType","creditsID","query","page","listType","useEffect","a","axios","get","console","doFetch","SearchPage","searched","setSearched","setResults","params","useParams","searchData","fetchingData","total_results","noDetails","plotDetails","tagline","overview","genresDetails","genres","personLinkDetails","links","setUnique","Array","from","Set","find","fullData","filter","occupation","department","job","castDetails","cast","template","character","MovieDetailsPage","movieDetails","movieData","setMovieData","movieCredits","setMovieCredits","details","credits","background","backdrop_path","backgroundImage","style","num","hours","convertHours","Math","floor","minutes","convertMinutes","round","convertRuntime","runtime","GenresDetails","PersonLinkDetails","crew","status","revenue","currencyFormatter","code","decimalDigits","href","homepage","rel","PlotDetails","CastDetails","NoDetails","SeriesDetailsPage","seriesDetails","seriesData","setSeriesData","seriesCredits","setSeriesCredits","episode_run_time","last_air_date","created_by","number_of_episodes","number_of_seasons","PersonDetailsPage","personDetails","personData","setPersonData","birthday","place_of_birth","deathday","known_for_department","imdb_id","biography","errorPage","data-text","App","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","upcomingMovies","setUpcomingMovies","popularSeries","setPopularSeries","useHistory","popularData","nowPlayingData","upcomingData","push","fallback","path","component","ErrorPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9f1ef2ae.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Container, Button, FormControl } from 'react-bootstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst SearchBar = (props) => {\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [searchType, setSearchType] = useState('movie');\r\n\r\n\tconst handleSearchSelectChanges = e => {\r\n\t\tsetSearchType(e.target.value);\r\n\t}\r\n\r\n\tconst handleSearchInputChanges = e => {\r\n\t\tsetSearchValue(e.target.value);\r\n\t}\r\n\r\n\t/*const resetInputField = () => {\r\n\t\t//setSearchValue(\"\")\r\n\t\t//setSearchType('movie')\r\n\t}*/\r\n\r\n\tconst callSearchFunction = e => {\r\n\t\te.preventDefault();\r\n\t\tprops.search(searchValue, searchType);\r\n\t\t//resetInputField();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"SearchBar\">\r\n\t\t\t<FormControl\r\n\t\t\t\tonChange={handleSearchSelectChanges}\r\n\t\t\t\tclassName=\"SearchBar__select\"\r\n\t\t\t\tas=\"select\"\r\n\t\t\t\tvalue={searchType}>\r\n\t\t\t\t<option value=\"movie\">Movie</option>\r\n\t\t\t\t<option value=\"tv\">Tv</option>\r\n\t\t\t\t<option value=\"person\">Person</option>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t\tclassName=\"SearchBar__input\"\r\n\t\t\t\tvalue={searchValue}\r\n\t\t\t\tonChange={handleSearchInputChanges} />\r\n\t\t\t<Button\r\n\t\t\t\tonClick={callSearchFunction}\r\n\t\t\t\tclassName=\"SearchBar__button\"\r\n\t\t\t\tvariant=\"danger\">\r\n\t\t\t\t<FaSearch />\r\n\t\t\t</Button>\r\n\t</Container>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport { Nav, Navbar, Button } from \"react-bootstrap\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { RiMovie2Line } from \"react-icons/ri\";\r\n\r\nconst Header = (props) => {\r\n\tlet detailsStyle = '';\r\n\tlet noSearch = false;\r\n\r\n\tif ((/movie_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/person_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/series_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tconst goBack = () => {\r\n\t\twindow.history.back();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={`header${detailsStyle}`}>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName=\"header__navBar\"\r\n\t\t\t\tsticky=\"top\"\r\n\t\t\t\texpand=\"md\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tvariant=\"dark\">\r\n\t\t\t\t<NavLink className=\"navbar-brand\" variant=\"danger\" exact to=\"/\">\r\n\t\t\t\t\t<span className=\"navbar-brand__logo\"><RiMovie2Line /></span>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav\r\n\t\t\t\t\t\tdefaultActiveKey=\"/\"\r\n\t\t\t\t\t\tactiveKey=\"active\"\r\n\t\t\t\t\t\tclassName=\"mr-auto\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/now_playing\">\r\n\t\t\t\t\t\t\tNow Playing Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/popular\">\r\n\t\t\t\t\t\t\tPopular Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\tto=\"/upcoming\">\r\n\t\t\t\t\t\t\tUpcoming Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t{ noSearch ?\r\n\t\t\t\t\t\t<Button variant=\"danger\" className=\"btnBack ripple\" onClick={goBack}>❰❰ Back </Button>:\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t{ noSearch ?\r\n\t\t\t\tnull :\r\n\t\t\t\t<SearchBar className=\"header__search\" search={props.search}/>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nconst loading = () => {\r\n\treturn(\r\n\t\t<div className=\"loading\">\r\n\t\t\t<div className=\"loading__inner\">\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default loading;","import React from 'react';\r\nimport { generateCustomPlaceholderURL } from 'react-placeholder-image';\r\nimport { Img } from 'react-progressive-loader'\r\n\r\nconst ImgLoader = (props) => {\r\n\tlet returnImg;\r\n\tlet alt = props.title;\r\n\tlet imgSrc = generateCustomPlaceholderURL(props.width, props.height, {\r\n\t\ttextColor: '#ffffff',\r\n\t\ttext: props.text,\r\n\t});\r\n\tif (props.alt) alt = props.alt;\r\n\r\n\tif (props.src !== null) {\r\n\t\treturnImg = <Img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={`https://image.tmdb.org/t/p/${props.type}${props.src}`}\r\n\t\t\tplaceholderSrc={`https://image.tmdb.org/t/p/w200${props.src}`}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title}/>\r\n\t} else {\r\n\t\treturnImg = <img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={imgSrc}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title} />\r\n\t}\r\n\r\n\treturn returnImg\r\n}\r\n\r\nexport default ImgLoader;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from '../../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\n\r\nconst listItem = props => {\r\n\r\n\tlet title = props.movieTitle;\r\n\tlet link = `/movie_details/${props.movieID}`;\r\n\tlet date = props.releaseDate;\r\n\r\n\tif(props.seriesTitle) {\r\n\t\ttitle = props.seriesTitle;\r\n\t\tlink = `/series_details/${props.movieID}`\r\n\t\tdate = props.fisrtAirDate;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"mainContent__list__item\">\r\n\t\t\t<Link to={link}>\r\n\t\t\t\t<div className=\"mainContent__list__item__image\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={props.img}\r\n\t\t\t\t\t\twidth={100}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\ttext=\"Img\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mainContent__list__item__title\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t\t<span className=\"mainContent__list__item__title__date\">{moment(date).format('YYYY')}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport ListItem from './ListItem';\r\nimport Loading from \"../Loading\";\r\n\r\nconst List = ({data, styled, number = 0}) => {\r\n\tlet listItems;\r\n\tif(!data) {\r\n\t\tlistItems = <Loading />;\r\n\t} else if (number > 0) {\r\n\t\tlistItems = data.slice(0, number).map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t} else {\r\n\t\tlistItems = data.map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<ListGroup variant=\"flush\" className={styled}>\r\n\t\t\t{listItems}\r\n\t\t</ListGroup>\r\n\t)\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport List from '../components/List/List';\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst HomePage = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Upcoming Movies</h2>\r\n\t\t\t\t\t{ props.upcomingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.upcomingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Now Playing Movies</h2>\r\n\t\t\t\t\t{ props.nowPlayingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.nowPlayingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Series</h2>\r\n\t\t\t\t\t{ props.popularSeriesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularSeriesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Movies</h2>\r\n\t\t\t\t\t{ props.popularMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from \"../ImgLoader\";\r\n\r\nconst MovieCard = ({ card, type }) => {\r\n\tlet link = `/movie_details/${card.id}`;\r\n\tlet title = card.title\r\n\tlet poster = card.poster_path\r\n\r\n\tif(type === 'tv') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/series_details/${card.id}`\r\n\t} else if (type === 'person') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/person_details/${card.id}`\r\n\t\tposter = card.profile_path;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tclassName=\"Card\"\r\n\t\t\tto={link}>\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"movieCard\"\r\n\t\t\t    bg=\"transparent\"\r\n\t\t\t\ttext=\"dark\">\r\n\t\t\t\t<Img\r\n\t\t\t\t\tstyled=\"card-img-top movieCard__img\"\r\n\t\t\t\t\tsrc={poster}\r\n\t\t\t\t\twidth={200}\r\n\t\t\t\t\theight={300}\r\n\t\t\t\t\ttype=\"w500\"\r\n\t\t\t\t\talt={`The movie titled: ${title}`}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t<Card.Body className=\"movieCard__body\">\r\n\t\t\t\t\t<Card.Text className=\"movieCard__body__text\">{title}</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst ListPage = props => {\r\n\r\n\tlet listItems;\r\n\r\n\tif(props.loading || !props.listData) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = props.listData.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} xs={6} md={4} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value}/>\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default ListPage;","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FetchingData = (urlParams) => {\r\n\tconst [response, setResponse] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tlet URL;\r\n\t//listType: upcoming, now_playing, popular, top_rated, latest, ,\r\n\t//queryType: movie, tv\r\n\tif(urlParams.OMDB) {\r\n\t\tURL = `${process.env.REACT_APP_OMDB_API_URL}?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=${urlParams.imdbID}`;\r\n\t} else if (urlParams.detailsID) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.detailsID}?api_key=${process.env.REACT_APP_TMDB_API_KEY}`;\r\n\t} else if (urlParams.creditsID) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.creditsID}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}`;\r\n\t} else if (urlParams.query) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}search/${urlParams.queryType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${urlParams.query}&page=${urlParams.page}`;\r\n\t} else {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.listType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${urlParams.page}`;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst doFetch = async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get(URL);\r\n\t\t\t\tsetResponse(response.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetError(error)\r\n\t\t\t\tconsole.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoFetch();\r\n\t}, [URL])\r\n\r\n\treturn {response, error, loading};\r\n}\r\n\r\nexport default FetchingData;","import React, {useEffect, useState} from 'react';\r\nimport Loading from \"../components/Loading\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst SearchPage = props => {\r\n\tconst [ searched, setSearched ] = useState(null);\r\n\tconst [ results, setResults ] = useState(0);\r\n\t//const [ totalPages, setTotalPages ] = useState(null)\r\n\r\n\tlet listItems;\r\n\tconst params = useParams();\r\n\r\n\tconst searchData = fetchingData({\r\n\t\tqueryType: params.type,\r\n\t\tquery: params.query,\r\n\t\tpage: props.page\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searchData.response !== null) {\r\n\t\t\tsetSearched(searchData.response);\r\n\t\t\tsetResults(searchData.response.total_results);\r\n\t\t\t//setTotalPages(searchData.response.total_pages);\r\n\t\t}\r\n\t}, [searchData.response]);\r\n\r\n\tif(searchData.loading || !searchData.response) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = searched.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} sm={12} md={6} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value} type={params.type} />\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}: {params.query} </h2>\r\n\t\t\t<h3>Total results: {results}</h3>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport Loading from '../Loading';\r\n\r\nconst noDetails = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Details</h2>\r\n\t\t\t<Loading />\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default noDetails;\r\n","import React from 'react';\r\n\r\nconst plotDetails = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{props.tagline ? <p className=\"tagline\">{props.tagline}</p> : null}\r\n\t\t\t<h2 className=\"title\">{props.title}</h2>\r\n\t\t\t<div className=\"text\">{props.overview}</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default plotDetails;","import React from 'react';\r\n\r\nconst genresDetails = props => {\r\n\tlet genres = 'N/A';\r\n\r\n\tif (props.data) {\r\n\t\tgenres = props.data.map((value, index) => (\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"genres badge badge-pill badge-dark\"\r\n\t\t\t\tkey={index}>\r\n\t\t\t{value.name}\r\n\t\t</span>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{genres}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default genresDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst personLinkDetails = props => {\r\n\tlet links = 'N/A';\r\n\tlet data = props.data;\r\n\r\n\tconst setUnique = data => {\r\n\t\treturn Array.from(new Set(data.map(a => a.id)))\r\n\t\t\t.map(id => {\r\n\t\t\t\treturn data.find(a => a.id === id)\r\n\t\t\t})\r\n\t};\r\n\r\n\tif(props.type === 'director') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Directing' &&\r\n\t\t\toccupation.job === 'Director'\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(props.type === 'writer') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Writing'\t&&\r\n\t\t\t(occupation.job === 'Screenplay' || occupation.job === 'Writer')\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(data) {\r\n\t\tlinks = data.map((value, index) => (\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"person-link\"\r\n\t\t\t\tkey={index}\r\n\t\t\t\tto={`/person_details/${value.id}`}>\r\n\t\t\t\t{value.name}\r\n\t\t\t</Link>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{links}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default personLinkDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Img from '../../components/ImgLoader'\r\n\r\nconst castDetails = props => {\r\n\tlet cast = 'N/A';\r\n\r\n\tconst template = (data, index) => (\r\n\t\t<Col xs={6} md={3} lg={2} key={index} className=\"cast__col\">\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"cast__link\"\r\n\t\t\t\tto={`/person_details/${data.id}`}>\r\n\t\t\t\t<div className=\"cast__link__data\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={data.profile_path}\r\n\t\t\t\t\t\twidth={350}\r\n\t\t\t\t\t\theight={520}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\tstyled=\"cast__link__data__image\"\r\n\t\t\t\t\t\ttitle={data.name}\r\n\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t<p className=\"cast__link__data__name\">{data.name}</p>\r\n\t\t\t\t\t<small className=\"cast__link__data__character\">{data.character}</small>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</Col>\r\n\t);\r\n\r\n\tif(props.data) {\r\n\t\tif (props.number) {\r\n\t\t\tcast = props.data.slice(0,  props.number).map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t} else {\r\n\t\t\tcast = props.data.map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"cast\">\r\n\t\t\t<h2 className=\"cast__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{cast}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default castDetails;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport GenresDetails from \"../components/Details/GenresDetails\";\r\nimport PersonLinkDetails from \"../components/Details/PersonLinkDetails\";\r\nimport CastDetails from '../components/Details/CastDetails';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nconst MovieDetailsPage = () => {\r\n\tlet movieDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [movieData, setMovieData] = useState(null);\r\n\tconst [movieCredits, setMovieCredits] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'movie',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tconst credits = fetchingData({\r\n\t\tqueryType: 'movie',\r\n\t\tcreditsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetMovieData(details.response);\r\n\t\t}\r\n\t\tif (credits.response !== null) {\r\n\t\t\tsetMovieCredits(credits.response);\r\n\t\t}\r\n\t}, [details.response, credits.response]);\r\n\r\n\tconst convertRuntime = num => {\r\n\t\tlet hours = num / 60;\r\n\t\tlet convertHours = Math.floor(hours);\r\n\t\tlet minutes = (hours - convertHours) * 60;\r\n\t\tlet convertMinutes = Math.round(minutes);\r\n\t\treturn `${convertHours}h ${convertMinutes}min`;\r\n\t};\r\n\r\n\tlet background = null;\r\n\r\n\tif(movieData && movieCredits) {\r\n\t\tif(movieData.backdrop_path !== null) background = {backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`};\r\n\r\n\t\tmovieDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\"\r\n\t\t\t\t     style={background} />\r\n\t\t\t\t<div className=\"movie details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={movieData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{movieData.title}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {convertRuntime(movieData.runtime)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={movieData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Directors <span><PersonLinkDetails type=\"director\" fullData={movieCredits.crew}/></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Written <span><PersonLinkDetails type=\"writer\" fullData={movieCredits.crew} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{moment(movieData.release_date).format('D MMMM YYYY')}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Revenue</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.revenue > 0 ? currencyFormatter.format(movieData.revenue, { code: 'USD', decimalDigits: 0 }) : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={movieData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttagline={movieData.tagline}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={movieData.overview}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<CastDetails title=\"Cast\" data={movieCredits.cast} number={12}/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tmovieDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{movieDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default MovieDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails'\r\nimport Img from '../components/ImgLoader'\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport GenresDetails from '../components/Details/GenresDetails';\r\nimport PersonLinkDetails from '../components/Details/PersonLinkDetails'\r\nimport moment from \"moment\";\r\nimport CastDetails from \"../components/Details/CastDetails\";\r\n\r\nconst SeriesDetailsPage = props => {\r\n\tlet seriesDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [seriesData, setSeriesData] = useState(null);\r\n\tconst [seriesCredits, setSeriesCredits] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'tv',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tconst credits = fetchingData({\r\n\t\tqueryType: 'tv',\r\n\t\tcreditsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetSeriesData(details.response);\r\n\t\t}\r\n\t\tif (credits.response !== null) {\r\n\t\t\tsetSeriesCredits(credits.response);\r\n\t\t}\r\n\t}, [details.response, credits.response]);\r\n\r\n\tif(seriesData && seriesCredits) {\r\n\t\tseriesDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\" style={{backgroundImage: `url(https://image.tmdb.org/t/p/original${seriesData.backdrop_path})`}} />\r\n\t\t\t\t<div className=\"series details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={seriesData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{seriesData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {seriesData.episode_run_time[0]} min\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={seriesData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Date <span>{moment(seriesData.first_air_date).format('YYYY')} - {moment(seriesData.last_air_date).format('YYYY')}</span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Creators <span><PersonLinkDetails data={seriesData.created_by} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.release_date}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Total episodes</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_episodes > 0 ? seriesData.number_of_episodes : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Seasons</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_seasons > 0 ? seriesData.number_of_seasons : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={seriesData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttagline={seriesData.tagline}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={seriesData.overview}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<CastDetails title=\"Cast\" data={seriesCredits.cast} number={12}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tseriesDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{seriesDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default SeriesDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\nconst PersonDetailsPage = () => {\r\n\tlet personDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [personData, setPersonData] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'person',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetPersonData(details.response);\r\n\t\t}\r\n\t}, [details.response]);\r\n\r\n\tif(personData) {\r\n\r\n\t\tpersonDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"person details__background\" />\r\n\t\t\t\t<div className=\"person details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={personData.profile_path}\r\n\t\t\t\t\t\t\t\twidth={210}\r\n\t\t\t\t\t\t\t\theight={315}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={personData.name}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{personData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Born\t<span>\r\n\t\t\t\t\t\t\t\t{personData.birthday ? moment(personData.birthday).format('MMM D, YYYY') : 'N/A'} in {personData.place_of_birth ? personData.place_of_birth : 'N/A'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{personData.deathday ? <p className=\"details__content__head__credit\">Death <span>{moment(personData.deathday).format('MMM D, YYYY')}</span></p> : null}\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Know for <span>{personData.known_for_department}</span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.homepage ?\t<a href={personData.homepage} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<h3>Imdb Link</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.imdb_id ? <a href={`https://www.imdb.com/name/${personData.imdb_id}`} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Biography\"\r\n\t\t\t\t\t\t\t\t\toverview={personData.biography}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tpersonDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{personDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default PersonDetailsPage;","import React from 'react';\r\n\r\nconst errorPage = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Oops! Page not found!</h2>\r\n\t\t\t<div className=\"error404\">\r\n\t\t\t\t<div className=\"glitch\" data-text=\"404\">404</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default errorPage;","import React, { useEffect, useState,  Suspense} from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header/Header';\r\nimport Loading from '../components/Loading';\r\nimport { Container } from 'react-bootstrap';\r\nimport { FaReact, FaBootstrap } from 'react-icons/fa'\r\nimport HomePage from '../pages/HomePage';\r\nimport ListPage from '../pages/ListPage';\r\nimport SearchPage from '../pages/SearchPage';\r\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\r\nimport SeriesDetailsPage from '../pages/SeriesDetailsPage';\r\nimport PersonDetailsPage from '../pages/PersonDetailsPage';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport fetchingData from '../hooks/FetchingData';\r\n\r\n\r\nfunction App() {\r\n    //const [page, setPage] = useState(1);\r\n\r\n    const [ nowPlayingMovies, setNowPlayingMovies ] = useState(null);\r\n    const [ popularMovies, setPopularMovies ] = useState(null);\r\n    const [ upcomingMovies, setUpcomingMovies ] = useState(null);\r\n    const [ popularSeries, setPopularSeries ] = useState(null);\r\n\r\n    let history = useHistory();\r\n\r\n    /* const handleShowMore = () => {\r\n        setPage(page + 1);\r\n        console.log('show more');\r\n    };*/\r\n\r\n    const getSearch = (searchValue, searchType) => {\r\n        if(searchValue && searchType) {\r\n            history.push(`/search/${searchType}/${searchValue}`);\r\n        }\r\n    }\r\n\r\n    const popularData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    const nowPlayingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'now_playing',\r\n        page: 1\r\n    });\r\n\r\n    const upcomingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'upcoming',\r\n        page: 1\r\n    });\r\n\r\n    const popularSeriesData = fetchingData({\r\n        queryType: 'tv',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (popularData.response !== null) {\r\n            setPopularMovies(popularData.response);\r\n        }\r\n        if (upcomingData.response !== null) {\r\n            setUpcomingMovies(upcomingData.response);\r\n        }\r\n        if (nowPlayingData.response !== null) {\r\n            setNowPlayingMovies(nowPlayingData.response);\r\n        }\r\n        if (popularSeriesData.response !== null) {\r\n            setPopularSeries(popularSeriesData.response);\r\n        }\r\n    }, [popularData.response, upcomingData.response, nowPlayingData.response, popularSeriesData.response]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header\r\n                title=\"Movie Search\"\r\n                search={getSearch}\r\n            />\r\n            <Container className=\"mainContent\">\r\n                <Suspense fallback={<Loading />}/>\r\n                <Switch>\r\n                    <Route path=\"/upcoming\">\r\n                        <ListPage\r\n                            listData={upcomingMovies}\r\n                            title=\"Upcoming Movies\"\r\n                            loading={upcomingData.loading}\r\n                            type=\"upcoming\"/>\r\n                    </Route>\r\n                    <Route path=\"/popular\">\r\n                        <ListPage\r\n                            listData={popularMovies}\r\n                            loading={popularData.loading}\r\n                            title=\"Popular Movies\"\r\n                            type=\"popular\"/>\r\n                    </Route>\r\n                    <Route path=\"/now_playing\">\r\n                        <ListPage\r\n                            listData={nowPlayingMovies}\r\n                            loading={nowPlayingData.loading}\r\n                            title=\"Now Playing Movies\"\r\n                            type=\"now_playing\"/>\r\n                    </Route>\r\n                    <Route path=\"/movie_details/:id\" component={MovieDetailsPage} />\r\n                    <Route path=\"/series_details/:id\" component={SeriesDetailsPage} />\r\n                    <Route path=\"/person_details/:id\" component={PersonDetailsPage} />\r\n                    <Route exact path=\"/\">\r\n                        <HomePage\r\n                            upcomingMoviesData={upcomingMovies}\r\n                            popularMoviesData={popularMovies}\r\n                            nowPlayingMoviesData={nowPlayingMovies}\r\n                            popularSeriesData={popularSeries}\r\n                            number={10}/>\r\n                    </Route>\r\n                    <Route path=\"/search/:type/:query\">\r\n                        <SearchPage\r\n                            page={1}\r\n                            title=\"Search\"\r\n                            type=\"search\"/>\r\n                    </Route>\r\n                    <Route component={ErrorPage} />\r\n                </Switch>\r\n            </Container>\r\n            <footer>\r\n                <p><FaReact /> <FaBootstrap /></p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <App />\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}