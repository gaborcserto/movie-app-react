{"version":3,"sources":["components/Header/SearchBar/SearchBar.js","components/Header/Header.js","components/Loading.js","components/ImgLoader.js","components/List/ListItem.js","components/List/List.js","pages/HomePage.js","components/MovieCard/MovieCard.js","pages/ListPage.js","hooks/FetchingData.js","pages/SearchPage.js","components/Details/NoDetails.js","components/Details/PlotDetails.js","components/Details/GenresDetails.js","components/Details/PersonLinkDetails.js","components/Details/CastDetails.js","pages/MovieDetailsPage.js","pages/SeriesDetailsPage.js","pages/PersonDetailsPage.js","pages/ErrorPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","useState","searchValue","setSearchValue","searchType","setSearchType","Container","className","FormControl","onChange","e","target","value","as","placeholder","Button","onClick","preventDefault","search","variant","withRouter","path","window","location","pathname","slice","detailsStyle","noSearch","test","Navbar","sticky","expand","bg","exact","to","title","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","activeKey","activeClassName","history","back","loading","ImgLoader","alt","imgSrc","generateCustomPlaceholderURL","width","height","textColor","text","src","styled","type","placeholderSrc","listItem","movieTitle","link","movieID","date","releaseDate","seriesTitle","fisrtAirDate","ListGroup","Item","img","moment","format","List","listItems","data","number","map","index","ListItem","key","poster_path","release_date","first_air_date","original_name","Loading","HomePage","Fragment","Row","Col","sm","md","upcomingMoviesData","results","nowPlayingMoviesData","popularSeriesData","popularMoviesData","MovieCard","card","console","log","poster","name","profile_path","Card","Body","Text","ListPage","listData","xs","lg","FetchingData","urlParams","URL","response","setResponse","error","setError","setLoading","OMDB","process","imdbID","detailsID","queryType","creditsID","query","page","listType","useEffect","a","axios","get","doFetch","SearchPage","searched","setSearched","setResults","params","useParams","searchData","fetchingData","total_results","noDetails","plotDetails","tagline","overview","genresDetails","genres","personLinkDetails","links","setUnique","Array","from","Set","find","fullData","filter","occupation","department","job","castDetails","cast","template","character","MovieDetailsPage","movieDetails","movieData","setMovieData","movieCredits","setMovieCredits","details","credits","background","backdrop_path","backgroundImage","style","num","hours","convertHours","Math","floor","minutes","convertMinutes","round","convertRuntime","runtime","GenresDetails","PersonLinkDetails","crew","status","revenue","currencyFormatter","code","decimalDigits","href","homepage","rel","PlotDetails","CastDetails","NoDetails","SeriesDetailsPage","seriesDetails","seriesData","setSeriesData","seriesCredits","setSeriesCredits","episode_run_time","last_air_date","created_by","number_of_episodes","number_of_seasons","PersonDetailsPage","personDetails","personData","setPersonData","birthday","place_of_birth","deathday","known_for_department","imdb_id","biography","errorPage","data-text","App","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","upcomingMovies","setUpcomingMovies","popularSeries","setPopularSeries","useHistory","popularData","nowPlayingData","upcomingData","push","fallback","component","ErrorPage","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.036c68b3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Container, Button, FormControl } from 'react-bootstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst SearchBar = (props) => {\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [searchType, setSearchType] = useState('movie');\r\n\r\n\tconst handleSearchSelectChanges = e => {\r\n\t\tsetSearchType(e.target.value);\r\n\t}\r\n\r\n\tconst handleSearchInputChanges = e => {\r\n\t\tsetSearchValue(e.target.value);\r\n\t}\r\n\r\n\t/*const resetInputField = () => {\r\n\t\t//setSearchValue(\"\")\r\n\t\t//setSearchType('movie')\r\n\t}*/\r\n\r\n\tconst callSearchFunction = e => {\r\n\t\te.preventDefault();\r\n\t\tprops.search(searchValue, searchType);\r\n\t\t//resetInputField();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"SearchBar\">\r\n\t\t\t<FormControl\r\n\t\t\t\tonChange={handleSearchSelectChanges}\r\n\t\t\t\tclassName=\"SearchBar__select\"\r\n\t\t\t\tas=\"select\"\r\n\t\t\t\tvalue={searchType}>\r\n\t\t\t\t<option value=\"movie\">Movie</option>\r\n\t\t\t\t<option value=\"tv\">Tv</option>\r\n\t\t\t\t<option value=\"person\">Person</option>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t\tclassName=\"SearchBar__input\"\r\n\t\t\t\tvalue={searchValue}\r\n\t\t\t\tonChange={handleSearchInputChanges} />\r\n\t\t\t<Button\r\n\t\t\t\tonClick={callSearchFunction}\r\n\t\t\t\tclassName=\"SearchBar__button\"\r\n\t\t\t\tvariant=\"danger\">\r\n\t\t\t\t<FaSearch />\r\n\t\t\t</Button>\r\n\t</Container>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport { Nav, Navbar, Button } from \"react-bootstrap\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { RiMovie2Line } from \"react-icons/ri\";\r\n\r\nconst Header = (props) => {\r\n\tconst path = window.location.pathname.slice(1);\r\n\tlet detailsStyle = '';\r\n\tlet noSearch = false;\r\n\r\n\tif ((/movie_details/).test(path)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/person_details/).test(path)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/series_details/).test(path)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tconst goBack = () => {\r\n\t\twindow.history.back();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={`header${detailsStyle}`}>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName=\"header__navBar\"\r\n\t\t\t\tsticky=\"top\"\r\n\t\t\t\texpand=\"lg\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tvariant=\"dark\">\r\n\t\t\t\t<NavLink className=\"navbar-brand\" variant=\"danger\" exact to=\"/\">\r\n\t\t\t\t\t<span className=\"navbar-brand__logo\"><RiMovie2Line /></span>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav\r\n\t\t\t\t\t\tdefaultActiveKey=\"/\"\r\n\t\t\t\t\t\tactiveKey=\"active\"\r\n\t\t\t\t\t\tclassName=\"mr-auto\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/now_playing\">\r\n\t\t\t\t\t\t\tNow Playing Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/popular\">\r\n\t\t\t\t\t\t\tPopular Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\tto=\"/upcoming\">\r\n\t\t\t\t\t\t\tUpcoming Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t{ noSearch ?\r\n\t\t\t\t\t\t<Button variant=\"danger\" className=\"btnBack ripple\" onClick={goBack}>❰❰ Back </Button>:\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t{ noSearch ?\r\n\t\t\t\tnull :\r\n\t\t\t\t<SearchBar className=\"header__search\" search={props.search}/>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nconst loading = () => {\r\n\treturn(\r\n\t\t<div className=\"loading\">\r\n\t\t\t<div className=\"loading__inner\">\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default loading;","import React from 'react';\r\nimport { generateCustomPlaceholderURL } from 'react-placeholder-image';\r\nimport { Img } from 'react-progressive-loader'\r\n\r\nconst ImgLoader = (props) => {\r\n\tlet returnImg;\r\n\tlet alt = props.title;\r\n\tlet imgSrc = generateCustomPlaceholderURL(props.width, props.height, {\r\n\t\ttextColor: '#ffffff',\r\n\t\ttext: props.text,\r\n\t});\r\n\tif (props.alt) alt = props.alt;\r\n\r\n\tif (props.src !== null) {\r\n\t\treturnImg = <Img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={`https://image.tmdb.org/t/p/${props.type}${props.src}`}\r\n\t\t\tplaceholderSrc={`https://image.tmdb.org/t/p/w200${props.src}`}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title}/>\r\n\t} else {\r\n\t\treturnImg = <img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={imgSrc}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title} />\r\n\t}\r\n\r\n\treturn returnImg\r\n}\r\n\r\nexport default ImgLoader;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from '../../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\n\r\nconst listItem = props => {\r\n\r\n\tlet title = props.movieTitle;\r\n\tlet link = `/movie_details/${props.movieID}`;\r\n\tlet date = props.releaseDate;\r\n\r\n\tif(props.seriesTitle) {\r\n\t\ttitle = props.seriesTitle;\r\n\t\tlink = `/series_details/${props.movieID}`\r\n\t\tdate = props.fisrtAirDate;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"mainContent__list__item\">\r\n\t\t\t<Link to={link}>\r\n\t\t\t\t<div className=\"mainContent__list__item__image\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={props.img}\r\n\t\t\t\t\t\twidth={100}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\ttext=\"Img\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mainContent__list__item__title\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t\t<span className=\"mainContent__list__item__title__date\">{moment(date).format('YYYY')}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport ListItem from './ListItem';\r\nimport Loading from \"../Loading\";\r\n\r\nconst List = ({data, styled, number = 0}) => {\r\n\tlet listItems;\r\n\tif(!data) {\r\n\t\tlistItems = <Loading />;\r\n\t} else if (number > 0) {\r\n\t\tlistItems = data.slice(0, number).map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t} else {\r\n\t\tlistItems = data.map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<ListGroup variant=\"flush\" className={styled}>\r\n\t\t\t{listItems}\r\n\t\t</ListGroup>\r\n\t)\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport List from '../components/List/List';\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst HomePage = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Upcoming Movies</h2>\r\n\t\t\t\t\t{ props.upcomingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.upcomingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Now Playing Movies</h2>\r\n\t\t\t\t\t{ props.nowPlayingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.nowPlayingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Series</h2>\r\n\t\t\t\t\t{ props.popularSeriesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularSeriesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Movies</h2>\r\n\t\t\t\t\t{ props.popularMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from \"../ImgLoader\";\r\n\r\nconst MovieCard = ({ card, type }) => {\r\n\tconsole.log(card);\r\n\r\n\tlet link = `/movie_details/${card.id}`;\r\n\tlet title = card.title\r\n\tlet poster = card.poster_path\r\n\r\n\tif(type === 'tv') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/series_details/${card.id}`\r\n\t} else if (type === 'person') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/person_details/${card.id}`\r\n\t\tposter = card.profile_path;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tclassName=\"Card\"\r\n\t\t\tto={link}>\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"movieCard\"\r\n\t\t\t    bg=\"transparent\"\r\n\t\t\t\ttext=\"dark\">\r\n\t\t\t\t<Img\r\n\t\t\t\t\tstyled=\"card-img-top movieCard__img\"\r\n\t\t\t\t\tsrc={poster}\r\n\t\t\t\t\twidth={200}\r\n\t\t\t\t\theight={300}\r\n\t\t\t\t\ttype=\"w500\"\r\n\t\t\t\t\talt={`The movie titled: ${title}`}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t<Card.Body className=\"movieCard__body\">\r\n\t\t\t\t\t<Card.Text className=\"movieCard__body__text\">{title}</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst ListPage = props => {\r\n\r\n\tlet listItems;\r\n\r\n\tif(props.loading || !props.listData) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = props.listData.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} xs={6} md={4} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value}/>\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default ListPage;","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FetchingData = (urlParams) => {\r\n\tconst [response, setResponse] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tlet URL;\r\n\t//listType: upcoming, now_playing, popular, top_rated, latest, ,\r\n\t//queryType: movie, tv\r\n\tif(urlParams.OMDB) {\r\n\t\tURL = `${process.env.REACT_APP_OMDB_API_URL}?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=${urlParams.imdbID}`;\r\n\t} else if (urlParams.detailsID) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.detailsID}?api_key=${process.env.REACT_APP_TMDB_API_KEY}`;\r\n\t} else if (urlParams.creditsID) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.creditsID}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}`;\r\n\t} else if (urlParams.query) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}search/${urlParams.queryType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${urlParams.query}&page=${urlParams.page}`;\r\n\t} else {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.listType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${urlParams.page}`;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst doFetch = async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get(URL);\r\n\t\t\t\tsetResponse(response.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetError(error)\r\n\t\t\t\tconsole.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoFetch();\r\n\t}, [URL])\r\n\r\n\treturn {response, error, loading};\r\n}\r\n\r\nexport default FetchingData;","import React, {useEffect, useState} from 'react';\r\nimport Loading from \"../components/Loading\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst SearchPage = props => {\r\n\tconst [ searched, setSearched ] = useState(null);\r\n\tconst [ results, setResults ] = useState(0);\r\n\t//const [ totalPages, setTotalPages ] = useState(null)\r\n\r\n\tlet listItems;\r\n\tconst params = useParams();\r\n\r\n\tconst searchData = fetchingData({\r\n\t\tqueryType: params.type,\r\n\t\tquery: params.query,\r\n\t\tpage: props.page\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searchData.response !== null) {\r\n\t\t\tsetSearched(searchData.response);\r\n\t\t\tsetResults(searchData.response.total_results);\r\n\t\t\t//setTotalPages(searchData.response.total_pages);\r\n\t\t}\r\n\t}, [searchData.response]);\r\n\r\n\tif(searchData.loading || !searchData.response) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = searched.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} sm={12} md={6} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value} type={params.type} />\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}: {params.query} </h2>\r\n\t\t\t<h3>Total results: {results}</h3>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport Loading from '../Loading';\r\n\r\nconst noDetails = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Details</h2>\r\n\t\t\t<Loading />\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default noDetails;\r\n","import React from 'react';\r\n\r\nconst plotDetails = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{props.tagline ? <p className=\"tagline\">{props.tagline}</p> : null}\r\n\t\t\t<h2 className=\"title\">{props.title}</h2>\r\n\t\t\t<div className=\"text\">{props.overview}</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default plotDetails;","import React from 'react';\r\n\r\nconst genresDetails = props => {\r\n\tlet genres = 'N/A';\r\n\r\n\tif (props.data) {\r\n\t\tgenres = props.data.map((value, index) => (\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"genres badge badge-pill badge-dark\"\r\n\t\t\t\tkey={index}>\r\n\t\t\t{value.name}\r\n\t\t</span>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{genres}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default genresDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst personLinkDetails = props => {\r\n\tlet links = 'N/A';\r\n\tlet data = props.data;\r\n\r\n\tconst setUnique = data => {\r\n\t\treturn Array.from(new Set(data.map(a => a.id)))\r\n\t\t\t.map(id => {\r\n\t\t\t\treturn data.find(a => a.id === id)\r\n\t\t\t})\r\n\t};\r\n\r\n\tif(props.type === 'director') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Directing' &&\r\n\t\t\toccupation.job === 'Director'\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(props.type === 'writer') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Writing'\t&&\r\n\t\t\t(occupation.job === 'Screenplay' || occupation.job === 'Writer')\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(data) {\r\n\t\tlinks = data.map((value, index) => (\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"person-link\"\r\n\t\t\t\tkey={index}\r\n\t\t\t\tto={`/person_details/${value.id}`}>\r\n\t\t\t\t{value.name}\r\n\t\t\t</Link>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{links}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default personLinkDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Img from '../../components/ImgLoader'\r\n\r\nconst castDetails = props => {\r\n\tlet cast = 'N/A';\r\n\r\n\tconst template = (data, index) => (\r\n\t\t<Col xs={6} md={3} lg={2} key={index} className=\"cast__col\">\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"cast__link\"\r\n\t\t\t\tto={`/person_details/${data.id}`}>\r\n\t\t\t\t<div className=\"cast__link__data\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={data.profile_path}\r\n\t\t\t\t\t\twidth={350}\r\n\t\t\t\t\t\theight={520}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\tstyled=\"cast__link__data__image\"\r\n\t\t\t\t\t\ttitle={data.name}\r\n\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t<p className=\"cast__link__data__name\">{data.name}</p>\r\n\t\t\t\t\t<small className=\"cast__link__data__character\">{data.character}</small>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</Col>\r\n\t);\r\n\r\n\tif(props.data) {\r\n\t\tif (props.number) {\r\n\t\t\tcast = props.data.slice(0,  props.number).map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t} else {\r\n\t\t\tcast = props.data.map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"cast\">\r\n\t\t\t<h2 className=\"cast__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{cast}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default castDetails;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport GenresDetails from \"../components/Details/GenresDetails\";\r\nimport PersonLinkDetails from \"../components/Details/PersonLinkDetails\";\r\nimport CastDetails from '../components/Details/CastDetails';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nconst MovieDetailsPage = () => {\r\n\tlet movieDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [movieData, setMovieData] = useState(null);\r\n\tconst [movieCredits, setMovieCredits] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'movie',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tconst credits = fetchingData({\r\n\t\tqueryType: 'movie',\r\n\t\tcreditsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetMovieData(details.response);\r\n\t\t}\r\n\t\tif (credits.response !== null) {\r\n\t\t\tsetMovieCredits(credits.response);\r\n\t\t}\r\n\t}, [details.response, credits.response]);\r\n\r\n\tconst convertRuntime = num => {\r\n\t\tlet hours = num / 60;\r\n\t\tlet convertHours = Math.floor(hours);\r\n\t\tlet minutes = (hours - convertHours) * 60;\r\n\t\tlet convertMinutes = Math.round(minutes);\r\n\t\treturn `${convertHours}h ${convertMinutes}min`;\r\n\t};\r\n\r\n\tlet background = null;\r\n\r\n\tif(movieData && movieCredits) {\r\n\t\tif(movieData.backdrop_path !== null) background = {backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`};\r\n\r\n\t\tmovieDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\"\r\n\t\t\t\t     style={background} />\r\n\t\t\t\t<div className=\"movie details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={movieData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{movieData.title}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {convertRuntime(movieData.runtime)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={movieData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Directors <span><PersonLinkDetails type=\"director\" fullData={movieCredits.crew}/></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Written <span><PersonLinkDetails type=\"writer\" fullData={movieCredits.crew} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{moment(movieData.release_date).format('D MMMM YYYY')}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Revenue</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.revenue > 0 ? currencyFormatter.format(movieData.revenue, { code: 'USD', decimalDigits: 0 }) : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={movieData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttagline={movieData.tagline}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={movieData.overview}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<CastDetails title=\"Cast\" data={movieCredits.cast} number={12}/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tmovieDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{movieDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default MovieDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails'\r\nimport Img from '../components/ImgLoader'\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport GenresDetails from '../components/Details/GenresDetails';\r\nimport PersonLinkDetails from '../components/Details/PersonLinkDetails'\r\nimport moment from \"moment\";\r\nimport CastDetails from \"../components/Details/CastDetails\";\r\n\r\nconst SeriesDetailsPage = props => {\r\n\tlet seriesDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [seriesData, setSeriesData] = useState(null);\r\n\tconst [seriesCredits, setSeriesCredits] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'tv',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tconst credits = fetchingData({\r\n\t\tqueryType: 'tv',\r\n\t\tcreditsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetSeriesData(details.response);\r\n\t\t}\r\n\t\tif (credits.response !== null) {\r\n\t\t\tsetSeriesCredits(credits.response);\r\n\t\t}\r\n\t}, [details.response, credits.response]);\r\n\r\n\tif(seriesData && seriesCredits) {\r\n\t\tseriesDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\" style={{backgroundImage: `url(https://image.tmdb.org/t/p/original${seriesData.backdrop_path})`}} />\r\n\t\t\t\t<div className=\"series details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={seriesData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{seriesData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {seriesData.episode_run_time[0]} min\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={seriesData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Date <span>{moment(seriesData.first_air_date).format('YYYY')} - {moment(seriesData.last_air_date).format('YYYY')}</span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Creators <span><PersonLinkDetails data={seriesData.created_by} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.release_date}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Total episodes</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_episodes > 0 ? seriesData.number_of_episodes : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Seasons</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_seasons > 0 ? seriesData.number_of_seasons : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={seriesData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttagline={seriesData.tagline}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={seriesData.overview}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<CastDetails title=\"Cast\" data={seriesCredits.cast} number={12}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tseriesDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{seriesDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default SeriesDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\nconst PersonDetailsPage = () => {\r\n\tlet personDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [personData, setPersonData] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'person',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetPersonData(details.response);\r\n\t\t}\r\n\t}, [details.response]);\r\n\r\n\tif(personData) {\r\n\r\n\t\tpersonDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"person details__background\" />\r\n\t\t\t\t<div className=\"person details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={personData.profile_path}\r\n\t\t\t\t\t\t\t\twidth={210}\r\n\t\t\t\t\t\t\t\theight={315}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={personData.name}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{personData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Born\t<span>\r\n\t\t\t\t\t\t\t\t{personData.birthday ? moment(personData.birthday).format('MMM D, YYYY') : 'N/A'} in {personData.place_of_birth ? personData.place_of_birth : 'N/A'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{personData.deathday ? <p className=\"details__content__head__credit\">Death <span>{moment(personData.deathday).format('MMM D, YYYY')}</span></p> : null}\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Know for <span>{personData.known_for_department}</span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.homepage ?\t<a href={personData.homepage} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<h3>Imdb Link</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.imdb_id ? <a href={`https://www.imdb.com/name/${personData.imdb_id}`} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Biography\"\r\n\t\t\t\t\t\t\t\t\toverview={personData.biography}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tpersonDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{personDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default PersonDetailsPage;","import React from 'react';\r\n\r\nconst errorPage = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Oops! Page not found!</h2>\r\n\t\t\t<div className=\"error404\">\r\n\t\t\t\t<div className=\"glitch\" data-text=\"404\">404</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default errorPage;","import React, { useEffect, useState,  Suspense} from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header/Header';\r\nimport Loading from '../components/Loading';\r\nimport { Container } from 'react-bootstrap';\r\nimport { FaReact, FaBootstrap } from 'react-icons/fa'\r\nimport HomePage from '../pages/HomePage';\r\nimport ListPage from '../pages/ListPage';\r\nimport SearchPage from '../pages/SearchPage';\r\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\r\nimport SeriesDetailsPage from '../pages/SeriesDetailsPage';\r\nimport PersonDetailsPage from '../pages/PersonDetailsPage';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport fetchingData from '../hooks/FetchingData';\r\n\r\n\r\nfunction App() {\r\n    //const [page, setPage] = useState(1);\r\n\r\n    const [ nowPlayingMovies, setNowPlayingMovies ] = useState(null);\r\n    const [ popularMovies, setPopularMovies ] = useState(null);\r\n    const [ upcomingMovies, setUpcomingMovies ] = useState(null);\r\n    const [ popularSeries, setPopularSeries ] = useState(null);\r\n\r\n    let history = useHistory();\r\n\r\n    /* const handleShowMore = () => {\r\n        setPage(page + 1);\r\n        console.log('show more');\r\n    };*/\r\n\r\n    const getSearch = (searchValue, searchType) => {\r\n        if(searchValue && searchType) {\r\n            history.push(`/search/${searchType}/${searchValue}`);\r\n        }\r\n    }\r\n\r\n    const popularData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    const nowPlayingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'now_playing',\r\n        page: 1\r\n    });\r\n\r\n    const upcomingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'upcoming',\r\n        page: 1\r\n    });\r\n\r\n    const popularSeriesData = fetchingData({\r\n        queryType: 'tv',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (popularData.response !== null) {\r\n            setUpcomingMovies(popularData.response);\r\n        }\r\n        if (upcomingData.response !== null) {\r\n            setPopularMovies(upcomingData.response);\r\n        }\r\n        if (nowPlayingData.response !== null) {\r\n            setNowPlayingMovies(nowPlayingData.response);\r\n        }\r\n        if (popularSeriesData.response !== null) {\r\n            setPopularSeries(popularSeriesData.response);\r\n        }\r\n    }, [popularData.response, upcomingData.response, nowPlayingData.response, popularSeriesData.response]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header\r\n                title=\"Movie Search\"\r\n                search={getSearch}\r\n            />\r\n            <Container className=\"mainContent\">\r\n                <Suspense fallback={<Loading />}/>\r\n                <Switch>\r\n                    <Route path=\"/upcoming\">\r\n                        <ListPage\r\n                            listData={upcomingMovies}\r\n                            title=\"Upcoming Movies\"\r\n                            loading={upcomingData.loading}\r\n                            type=\"upcoming\"/>\r\n                    </Route>\r\n                    <Route path=\"/popular\">\r\n                        <ListPage\r\n                            listData={popularMovies}\r\n                            loading={popularData.loading}\r\n                            title=\"Popular Movies\"\r\n                            type=\"popular\"/>\r\n                    </Route>\r\n                    <Route path=\"/now_playing\">\r\n                        <ListPage\r\n                            listData={nowPlayingMovies}\r\n                            loading={nowPlayingData.loading}\r\n                            title=\"Now Playing Movies\"\r\n                            type=\"now_playing\"/>\r\n                    </Route>\r\n                    <Route path=\"/movie_details/:id\" component={MovieDetailsPage} />\r\n                    <Route path=\"/series_details/:id\" component={SeriesDetailsPage} />\r\n                    <Route path=\"/person_details/:id\" component={PersonDetailsPage} />\r\n                    <Route exact path=\"/\">\r\n                        <HomePage\r\n                            upcomingMoviesData={upcomingMovies}\r\n                            popularMoviesData={popularMovies}\r\n                            nowPlayingMoviesData={nowPlayingMovies}\r\n                            popularSeriesData={popularSeries}\r\n                            number={10}/>\r\n                    </Route>\r\n                    <Route path=\"/search/:type/:query\">\r\n                        <SearchPage\r\n                            page={1}\r\n                            title=\"Search\"\r\n                            type=\"search\"/>\r\n                    </Route>\r\n                    <Route component={ErrorPage} />\r\n                </Switch>\r\n            </Container>\r\n            <footer>\r\n                <p><FaReact /> <FaBootstrap /></p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter basename=\"/movie-app-react\">\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}