{"version":3,"sources":["components/Header/SearchBar/SearchBar.js","components/Header/Header.js","components/Loading.js","components/ScrollToTop.js","components/ImgLoader.js","components/List/ListItem.js","components/List/List.js","pages/HomePage.js","components/MovieCard/MovieCard.js","pages/ListPage.js","hooks/FetchingData.js","pages/SearchPage.js","components/Details/NoDetails.js","components/Details/PlotDetails.js","components/Details/GenresDetails.js","components/Details/PersonLinkDetails.js","components/Details/CastDetails.js","components/Rating/CircleRating.js","components/Rating/Rating.js","components/Carousel.js","pages/MovieDetailsPage.js","pages/SeriesDetailsPage.js","pages/PersonDetailsPage.js","pages/ErrorPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","useState","searchValue","setSearchValue","searchType","setSearchType","Container","className","FormControl","onChange","e","target","value","as","placeholder","Button","onClick","preventDefault","search","variant","withRouter","detailsStyle","noSearch","test","document","URL","Navbar","sticky","expand","bg","exact","to","title","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","activeKey","activeClassName","window","history","back","loading","useEffect","unlisten","listen","scrollTo","ImgLoader","alt","imgSrc","generateCustomPlaceholderURL","width","height","textColor","text","src","styled","type","placeholderSrc","listItem","movieTitle","link","movieID","date","releaseDate","seriesTitle","fisrtAirDate","ListGroup","Item","img","moment","format","List","listItems","data","number","slice","map","index","ListItem","key","poster_path","release_date","first_air_date","original_name","Loading","HomePage","Fragment","Row","Col","sm","md","upcomingMoviesData","results","nowPlayingMoviesData","popularSeriesData","popularMoviesData","MovieCard","card","poster","name","profile_path","Card","Body","Text","ListPage","listData","xs","lg","FetchingData","urlParams","response","setResponse","error","setError","setLoading","imdbID","process","detailsID","queryType","query","page","listType","a","axios","get","console","doFetch","SearchPage","searched","setSearched","setResults","params","useParams","searchData","fetchingData","total_results","noDetails","plotDetails","tagline","overview","genresDetails","genres","personLinkDetails","links","setUnique","Array","from","Set","find","fullData","filter","occupation","department","job","castDetails","cast","template","character","CircleRating","progressBar","setProgressBar","circleConfig","chartNumber","percentage","decimal","pace","speed","updatePercentage","useCallback","setTimeout","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","trailSpaced","strokeDashoffset","innerText","Rating","imdb","meta","OMDBData","setOMDBData","tmdb","OMDBDetails","imdbRating","Metascore","carousel","responsive","handleOnDragStart","handleResponsive","items","length","760","0","1020","carouselItems","images","image","href","file_path","data-attribute","onDragStart","touchTrackingEnabled","dotsDisabled","mouseTrackingEnabled","videos","log","video","frameBorder","allow","allowFullScreen","MovieDetailsPage","movieDetails","movieData","setMovieData","details","background","backdrop_path","backgroundImage","style","num","hours","convertHours","Math","floor","minutes","convertMinutes","round","convertRuntime","runtime","GenresDetails","PersonLinkDetails","credits","crew","status","budget","currencyFormatter","code","decimalDigits","revenue","homepage","rel","imdb_id","vote_average","PlotDetails","Carousel","backdrops","CastDetails","NoDetails","SeriesDetailsPage","seriesDetails","seriesData","setSeriesData","episode_run_time","last_air_date","created_by","number_of_episodes","number_of_seasons","PersonDetailsPage","personDetails","personData","setPersonData","birthday","place_of_birth","deathday","known_for_department","biography","errorPage","data-text","App","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","upcomingMovies","setUpcomingMovies","popularSeries","setPopularSeries","useHistory","popularData","nowPlayingData","upcomingData","push","fallback","path","component","ErrorPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7a3f8eb1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Container, Button, FormControl } from 'react-bootstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst SearchBar = (props) => {\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [searchType, setSearchType] = useState('movie');\r\n\r\n\tconst handleSearchSelectChanges = e => {\r\n\t\tsetSearchType(e.target.value);\r\n\t}\r\n\r\n\tconst handleSearchInputChanges = e => {\r\n\t\tsetSearchValue(e.target.value);\r\n\t}\r\n\r\n\t/*const resetInputField = () => {\r\n\t\t//setSearchValue(\"\")\r\n\t\t//setSearchType('movie')\r\n\t}*/\r\n\r\n\tconst callSearchFunction = e => {\r\n\t\te.preventDefault();\r\n\t\tprops.search(searchValue, searchType);\r\n\t\t//resetInputField();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"SearchBar\">\r\n\t\t\t<FormControl\r\n\t\t\t\tonChange={handleSearchSelectChanges}\r\n\t\t\t\tclassName=\"SearchBar__select\"\r\n\t\t\t\tas=\"select\"\r\n\t\t\t\tvalue={searchType}>\r\n\t\t\t\t<option value=\"movie\">Movie</option>\r\n\t\t\t\t<option value=\"tv\">Series</option>\r\n\t\t\t\t<option value=\"person\">Person</option>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t\tclassName=\"SearchBar__input\"\r\n\t\t\t\tvalue={searchValue}\r\n\t\t\t\tonChange={handleSearchInputChanges} />\r\n\t\t\t<Button\r\n\t\t\t\tonClick={callSearchFunction}\r\n\t\t\t\tclassName=\"SearchBar__button\"\r\n\t\t\t\tvariant=\"danger\">\r\n\t\t\t\t<FaSearch />\r\n\t\t\t</Button>\r\n\t</Container>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport { Nav, Navbar, Button } from \"react-bootstrap\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { RiMovie2Line } from \"react-icons/ri\";\r\n\r\nconst Header = (props) => {\r\n\tlet detailsStyle = '';\r\n\tlet noSearch = false;\r\n\r\n\tif ((/movie_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/person_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tif ((/series_details/).test(document.URL)) {\r\n\t\tdetailsStyle = ' details';\r\n\t\tnoSearch = true;\r\n\t}\r\n\r\n\tconst goBack = () => {\r\n\t\twindow.history.back();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={`header${detailsStyle}`}>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName=\"header__navBar\"\r\n\t\t\t\tsticky=\"top\"\r\n\t\t\t\texpand=\"md\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tvariant=\"dark\">\r\n\t\t\t\t<NavLink className=\"navbar-brand\" variant=\"danger\" exact to=\"/\">\r\n\t\t\t\t\t<span className=\"navbar-brand__logo\"><RiMovie2Line /></span>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav\r\n\t\t\t\t\t\tdefaultActiveKey=\"/\"\r\n\t\t\t\t\t\tactiveKey=\"active\"\r\n\t\t\t\t\t\tclassName=\"mr-auto\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/now_playing\">\r\n\t\t\t\t\t\t\tNow Playing Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\texact to=\"/popular\">\r\n\t\t\t\t\t\t\tPopular Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\tto=\"/upcoming\">\r\n\t\t\t\t\t\t\tUpcoming Movies\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t{ noSearch ?\r\n\t\t\t\t\t\t<Button variant=\"danger\" className=\"btnBack ripple\" onClick={goBack}>❰❰ Back </Button>:\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t{ noSearch ?\r\n\t\t\t\tnull :\r\n\t\t\t\t<SearchBar className=\"header__search\" search={props.search}/>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nconst loading = () => {\r\n\treturn(\r\n\t\t<div className=\"loading\">\r\n\t\t\t<div className=\"loading__inner\">\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t\t<span/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default loading;","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n\tuseEffect(() => {\r\n\t\tconst unlisten = history.listen(() => {\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tunlisten();\r\n\t\t}\r\n\t}, [history]);\r\n\r\n\treturn (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\nimport { generateCustomPlaceholderURL } from 'react-placeholder-image';\r\nimport { Img } from 'react-progressive-loader'\r\n\r\nconst ImgLoader = (props) => {\r\n\tlet returnImg;\r\n\tlet alt = props.title;\r\n\tlet imgSrc = generateCustomPlaceholderURL(props.width, props.height, {\r\n\t\ttextColor: '#ffffff',\r\n\t\ttext: props.text,\r\n\t});\r\n\tif (props.alt) alt = props.alt;\r\n\r\n\tif (props.src !== null) {\r\n\t\treturnImg = <Img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={`https://image.tmdb.org/t/p/${props.type}${props.src}`}\r\n\t\t\tplaceholderSrc={`https://image.tmdb.org/t/p/w200${props.src}`}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title}/>\r\n\t} else {\r\n\t\treturnImg = <img\r\n\t\t\tclassName={props.styled}\r\n\t\t\tsrc={imgSrc}\r\n\t\t\talt={alt}\r\n\t\t\ttitle={props.title} />\r\n\t}\r\n\r\n\treturn returnImg\r\n}\r\n\r\nexport default ImgLoader;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from '../../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\n\r\nconst listItem = props => {\r\n\r\n\tlet title = props.movieTitle;\r\n\tlet link = `/movie_details/${props.movieID}`;\r\n\tlet date = props.releaseDate;\r\n\r\n\tif(props.seriesTitle) {\r\n\t\ttitle = props.seriesTitle;\r\n\t\tlink = `/series_details/${props.movieID}`\r\n\t\tdate = props.fisrtAirDate;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"mainContent__list__item\">\r\n\t\t\t<Link to={link}>\r\n\t\t\t\t<div className=\"mainContent__list__item__image\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={props.img}\r\n\t\t\t\t\t\twidth={100}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\ttext=\"Img\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mainContent__list__item__title\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t\t<span className=\"mainContent__list__item__title__date\">{moment(date).format('YYYY')}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport ListItem from './ListItem';\r\nimport Loading from \"../Loading\";\r\n\r\nconst List = ({data, styled, number = 0}) => {\r\n\tlet listItems;\r\n\tif(!data) {\r\n\t\tlistItems = <Loading />;\r\n\t} else if (number > 0) {\r\n\t\tlistItems = data.slice(0, number).map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t} else {\r\n\t\tlistItems = data.map((value, index) => (\r\n\t\t\t<ListItem\r\n\t\t\t\tkey={index}\r\n\t\t\t\timg={value.poster_path}\r\n\t\t\t\tmovieID={value.id}\r\n\t\t\t\tmovieTitle={value.title}\r\n\t\t\t\treleaseDate={value.release_date}\r\n\t\t\t\tfisrtAirDate={value.first_air_date}\r\n\t\t\t\tseriesTitle={value.original_name}/>\r\n\t\t));\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<ListGroup variant=\"flush\" className={styled}>\r\n\t\t\t{listItems}\r\n\t\t</ListGroup>\r\n\t)\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport List from '../components/List/List';\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst HomePage = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Upcoming Movies</h2>\r\n\t\t\t\t\t{ props.upcomingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.upcomingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Now Playing Movies</h2>\r\n\t\t\t\t\t{ props.nowPlayingMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.nowPlayingMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Series</h2>\r\n\t\t\t\t\t{ props.popularSeriesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularSeriesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12} md={6}>\r\n\t\t\t\t\t<h2 className=\"mainContent__title\">Popular Movies</h2>\r\n\t\t\t\t\t{ props.popularMoviesData ?\r\n\t\t\t\t\t\t<List styled=\"mainContent__list\" number={props.number} data={props.popularMoviesData.results}/> :\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Img from \"../ImgLoader\";\r\n\r\nconst MovieCard = ({ card, type }) => {\r\n\tlet link = `/movie_details/${card.id}`;\r\n\tlet title = card.title\r\n\tlet poster = card.poster_path\r\n\r\n\tif(type === 'tv') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/series_details/${card.id}`\r\n\t} else if (type === 'person') {\r\n\t\ttitle = card.name;\r\n\t\tlink = `/person_details/${card.id}`\r\n\t\tposter = card.profile_path;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tclassName=\"Card\"\r\n\t\t\tto={link}>\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"movieCard\"\r\n\t\t\t    bg=\"transparent\"\r\n\t\t\t\ttext=\"dark\">\r\n\t\t\t\t<Img\r\n\t\t\t\t\tstyled=\"card-img-top movieCard__img\"\r\n\t\t\t\t\tsrc={poster}\r\n\t\t\t\t\twidth={200}\r\n\t\t\t\t\theight={300}\r\n\t\t\t\t\ttype=\"w500\"\r\n\t\t\t\t\talt={`The movie titled: ${title}`}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t<Card.Body className=\"movieCard__body\">\r\n\t\t\t\t\t<Card.Text className=\"movieCard__body__text\">{title}</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport MovieCard from '../components/MovieCard/MovieCard';\r\nimport Loading from '../components/Loading';\r\n\r\nconst ListPage = props => {\r\n\r\n\tlet listItems;\r\n\r\n\tif(props.loading || !props.listData) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = props.listData.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} xs={6} md={4} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value}/>\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default ListPage;","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FetchingData = (urlParams) => {\r\n\tconst [response, setResponse] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tlet URL = null;\r\n\t//listType: upcoming, now_playing, popular, top_rated, latest, ,\r\n\t//queryType: movie, tv\r\n\tif(urlParams.imdbID) {\r\n\t\tURL = `${process.env.REACT_APP_OMDB_API_URL}?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=${urlParams.imdbID}`;\r\n\t} else if (urlParams.detailsID) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.detailsID}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&append_to_response=videos,images,credits`;\r\n\t} else if (urlParams.query) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}search/${urlParams.queryType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${urlParams.query}&page=${urlParams.page}`;\r\n\t} else if (urlParams.queryType && urlParams.listType) {\r\n\t\tURL = `${process.env.REACT_APP_TMDB_API_URL}${urlParams.queryType}/${urlParams.listType}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${urlParams.page}`;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(URL !== null) {\r\n\t\t\tconst doFetch = async () => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await axios.get(URL);\r\n\t\t\t\t\tsetResponse(response.data);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tsetError(error)\r\n\t\t\t\t\tconsole.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoFetch();\r\n\t\t}\r\n\t}, [URL])\r\n\r\n\treturn {response, error, loading};\r\n}\r\n\r\nexport default FetchingData;","import React, {useEffect, useState} from 'react';\r\nimport Loading from \"../components/Loading\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst SearchPage = props => {\r\n\tconst [ searched, setSearched ] = useState(null);\r\n\tconst [ results, setResults ] = useState(0);\r\n\t//const [ totalPages, setTotalPages ] = useState(null)\r\n\r\n\tlet listItems;\r\n\tconst params = useParams();\r\n\r\n\tconst searchData = fetchingData({\r\n\t\tqueryType: params.type,\r\n\t\tquery: params.query,\r\n\t\tpage: props.page\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searchData.response !== null) {\r\n\t\t\tsetSearched(searchData.response);\r\n\t\t\tsetResults(searchData.response.total_results);\r\n\t\t\t//setTotalPages(searchData.response.total_pages);\r\n\t\t}\r\n\t}, [searchData.response]);\r\n\r\n\tif(searchData.loading || !searchData.response) {\r\n\t\tlistItems = <Loading />;\r\n\t} else {\r\n\t\tlistItems = searched.results.map((value, index) => (\r\n\t\t\t<Col className=\"searchResult__col\" key={`${index}-${value.id}`} sm={12} md={6} lg={3}>\r\n\t\t\t\t<MovieCard key={index} card={value} type={params.type} />\r\n\t\t\t</Col>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">{props.title}: {params.query} </h2>\r\n\t\t\t<h3>Total results: {results}</h3>\r\n\t\t\t<Row>\r\n\t\t\t\t{listItems}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport Loading from '../Loading';\r\n\r\nconst noDetails = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Details</h2>\r\n\t\t\t<Loading />\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default noDetails;\r\n","import React from 'react';\r\n\r\nconst plotDetails = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{props.tagline ? <p className=\"tagline\">{props.tagline}</p> : null}\r\n\t\t\t<h2 className=\"title\">{props.title}</h2>\r\n\t\t\t<div className=\"text\">{props.overview}</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default plotDetails;","import React from 'react';\r\n\r\nconst genresDetails = props => {\r\n\tlet genres = 'N/A';\r\n\r\n\tif (props.data) {\r\n\t\tgenres = props.data.map((value, index) => (\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"genres badge badge-pill badge-dark\"\r\n\t\t\t\tkey={index}>\r\n\t\t\t{value.name}\r\n\t\t</span>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{genres}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default genresDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst personLinkDetails = props => {\r\n\tlet links = 'N/A';\r\n\tlet data = props.data;\r\n\r\n\tconst setUnique = data => {\r\n\t\treturn Array.from(new Set(data.map(a => a.id)))\r\n\t\t\t.map(id => {\r\n\t\t\t\treturn data.find(a => a.id === id)\r\n\t\t\t})\r\n\t};\r\n\r\n\tif(props.type === 'director') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Directing' &&\r\n\t\t\toccupation.job === 'Director'\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(props.type === 'writer') {\r\n\t\tdata = props.fullData.filter( occupation => (\r\n\t\t\toccupation.department === 'Writing'\t&&\r\n\t\t\t(occupation.job === 'Screenplay' || occupation.job === 'Writer')\r\n\t\t))\r\n\r\n\t\tdata = setUnique(data);\r\n\t}\r\n\r\n\tif(data) {\r\n\t\tlinks = data.map((value, index) => (\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"person-link\"\r\n\t\t\t\tkey={index}\r\n\t\t\t\tto={`/person_details/${value.id}`}>\r\n\t\t\t\t{value.name}\r\n\t\t\t</Link>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{links}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default personLinkDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Img from '../../components/ImgLoader'\r\n\r\nconst castDetails = props => {\r\n\tlet cast = 'N/A';\r\n\r\n\tconst template = (data, index) => (\r\n\t\t<Col xs={6} md={3} lg={2} key={index} className=\"cast__col\">\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"cast__link\"\r\n\t\t\t\tto={`/person_details/${data.id}`}>\r\n\t\t\t\t<div className=\"cast__link__data\">\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tsrc={data.profile_path}\r\n\t\t\t\t\t\twidth={350}\r\n\t\t\t\t\t\theight={520}\r\n\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\tstyled=\"cast__link__data__image\"\r\n\t\t\t\t\t\ttitle={data.name}\r\n\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t<p className=\"cast__link__data__name\">{data.name}</p>\r\n\t\t\t\t\t<small className=\"cast__link__data__character\">{data.character}</small>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</Col>\r\n\t);\r\n\r\n\tif(props.data) {\r\n\t\tif (props.number) {\r\n\t\t\tcast = props.data.slice(0,  props.number).map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t} else {\r\n\t\t\tcast = props.data.map((value, index) => (\r\n\t\t\t\ttemplate(value, index)\r\n\t\t\t));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"cast\">\r\n\t\t\t<h2 className=\"cast__title\">{props.title}</h2>\r\n\t\t\t<Row>\r\n\t\t\t\t{cast}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default castDetails;","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst CircleRating = props => {\r\n\tconst [progressBar, setProgressBar] = useState(0);\r\n\tconst INITIAL_OFFSET = 25;\r\n\tconst circleConfig = {\r\n\t\tviewBox: '0 0 38 38',\r\n\t\tx: '19',\r\n\t\ty: '19',\r\n\t\tradio: '15.91549430918954'\r\n\t};\r\n\r\n\tlet chartNumber = progressBar;\r\n\tlet percentage = props.percentage\r\n\r\n\tif (props.decimal) {\r\n\t\tchartNumber = progressBar/10;\r\n\t\tpercentage = props.percentage * 10;\r\n\t}\r\n\r\n\tconst pace = percentage / props.speed;\r\n\r\n\tconst updatePercentage = useCallback(() => {\r\n\t\tif (percentage > 0 || progressBar < percentage)\t{\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetProgressBar(progressBar + 1);\r\n\t\t\t}, pace);\r\n\t\t}\r\n\t}, [progressBar, percentage, pace]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (chartNumber < props.percentage) updatePercentage();\r\n\t}, [chartNumber, props.percentage, updatePercentage]);\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<figure className=\"circleRating\">\r\n\t\t\t<svg viewBox={circleConfig.viewBox}>\r\n\t\t\t\t<circle\r\n\t\t\t\t\tclassName=\"circleRating__donut-ring\"\r\n\t\t\t\t\tcx={circleConfig.x}\r\n\t\t\t\t\tcy={circleConfig.y}\r\n\t\t\t\t\tr={circleConfig.radio}\r\n\t\t\t\t\tfill=\"transparent\"\r\n\t\t\t\t\tstroke=\"ghostwhite\"\r\n\t\t\t\t\tstrokeWidth={1}\r\n\t\t\t\t\tstrokeDasharray={props.trailSpaced ? 1 : 0}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<circle\r\n\t\t\t\t\tclassName=\"circleRating__donut-segment\"\r\n\t\t\t\t\tcx={circleConfig.x}\r\n\t\t\t\t\tcy={circleConfig.y}\r\n\t\t\t\t\tr={circleConfig.radio}\r\n\t\t\t\t\tfill=\"transparent\"\r\n\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\tstrokeWidth={1}\r\n\t\t\t\t\tstrokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n\t\t\t\t\tstrokeDashoffset={INITIAL_OFFSET}\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\r\n\t\t\t<figcaption className=\"circleRating__chart\">\r\n\t\t\t\t<p className=\"circleRating__chart__number\">\r\n\t\t\t\t\t{chartNumber}\r\n\t\t\t\t</p>\r\n\t\t\t</figcaption>\r\n\t\t</figure>\r\n\t\t<p className=\"circleRating__label\">\r\n\t\t\t{props.innerText}\r\n\t\t</p>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CircleRating;","import React, {useEffect, useState} from 'react';\r\nimport fetchingData from '../../hooks/FetchingData';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport CircleRating from './CircleRating';\r\n\r\nconst Rating = props => {\r\n\tconst [OMDBData, setOMDBData] = useState(null);\r\n\tlet imdb, meta, tmdb = null;\r\n\r\n\tconst OMDBDetails = fetchingData({\r\n\t\timdbID: props.id,\r\n\t\tpage: 1\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (OMDBDetails.response !== null) {\r\n\t\t\tsetOMDBData(OMDBDetails.response);\r\n\t\t}\r\n\t}, [OMDBDetails.response]);\r\n\r\n\tif(props.imdb && OMDBData) {\r\n\t\timdb = OMDBData.imdbRating > 0 ? (\r\n\t\t\t<Col sm={4} className=\"imdb\">\r\n\t\t\t\t<CircleRating\r\n\t\t\t\t\tinnerText=\"IMDB\"\r\n\t\t\t\t\tpercentage={OMDBData.imdbRating}\r\n\t\t\t\t\ttrailSpaced={false}\r\n\t\t\t\t\tspeed={10}\r\n\t\t\t\t\tdecimal={true}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t) : null;\r\n\t}\r\n\r\n\tif(props.meta && OMDBData) {\r\n\t\tmeta = OMDBData.Metascore > 0 ? (\r\n\t\t\t<Col sm={4} className=\"metascore\">\r\n\t\t\t\t<CircleRating\r\n\t\t\t\t\tinnerText=\"Metascore\"\r\n\t\t\t\t\tpercentage={OMDBData.Metascore}\r\n\t\t\t\t\ttrailSpaced={false}\r\n\t\t\t\t\tspeed={10}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t) : null;\r\n\t}\r\n\r\n\tif(props.tmdb) {\r\n\t\ttmdb = (\r\n\t\t\t<Col sm={4} className=\"tmdb\">\r\n\t\t\t\t<CircleRating\r\n\t\t\t\t\tinnerText=\"The Movie Database\"\r\n\t\t\t\t\tpercentage={props.tmdb}\r\n\t\t\t\t\ttrailSpaced={false}\r\n\t\t\t\t\tspeed={10}\r\n\t\t\t\t\tdecimal={true}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"title\">{props.title}</h2>\r\n\t\t\t<Row className=\"rating\">\r\n\t\t\t\t{imdb}\r\n\t\t\t\t{meta}\r\n\t\t\t\t{tmdb}\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default Rating;","import React from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\nconst carousel = props => {\r\n\tconst handleOnDragStart = (e) => e.preventDefault();\r\n\tlet responsive;\r\n\r\n\tconst handleResponsive = (items) => {\r\n\t\tif(items.length < 3) {\r\n\t\t\treturn {\r\n\t\t\t\t760: {\r\n\t\t\t\t\titems: 2\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else if(items.length < 2) {\r\n\t\t\treturn {\r\n\t\t\t\t0: {\r\n\t\t\t\t\titems: 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t760: {\r\n\t\t\t\t\titems: 2\r\n\t\t\t\t},\r\n\t\t\t\t1020: {\r\n\t\t\t\t\titems: 3\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet carouselItems = null;\r\n\r\n\tif(props.images) {\r\n\t\tresponsive = handleResponsive(props.images);\r\n\r\n\t\tcarouselItems = props.images.map((image, index) => (\r\n\t\t\t<a href={`https://image.tmdb.org/t/p/original${image.file_path}`}\r\n\t\t\t   key={index}\r\n\t\t\t   data-attribute=\"SRL\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tonDragStart={handleOnDragStart}\r\n\t\t\t\t\tclassName=\"item carousel__item\"\r\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${image.file_path}`}\r\n\t\t\t\t\talt={`${props.alt}-${index}`}/>\r\n\t\t\t</a>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t<SimpleReactLightbox>\r\n\t\t\t\t\t<SRLWrapper>\r\n\t\t\t\t\t\t<AliceCarousel\r\n\t\t\t\t\t\t\ttouchTrackingEnabled={true}\r\n\t\t\t\t\t\t\tdotsDisabled={true}\r\n\t\t\t\t\t\t\tresponsive={responsive}\r\n\t\t\t\t\t\t\tmouseTrackingEnabled={true}>\r\n\t\t\t\t\t\t\t{carouselItems}\r\n\t\t\t\t\t\t</AliceCarousel>\r\n\t\t\t\t\t</SRLWrapper>\r\n\t\t\t\t</SimpleReactLightbox>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\tif(props.videos) {\r\n\t\tresponsive = handleResponsive(props.videos);\r\n\t\tconsole.log(responsive);\r\n\t\tcarouselItems = props.videos.map((video, index) => (\r\n\t\t\t<div className=\"item carousel__item video\" key={index}>\r\n\t\t\t\t<iframe\r\n\t\t\t\t\tsrc={`https://www.youtube.com/embed/${video.key}`}\r\n\t\t\t\t    frameBorder='0'\r\n\t\t\t\t    allow='autoplay; encrypted-media'\r\n\t\t\t\t    allowFullScreen\r\n\t\t\t\t    title={video.name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t<AliceCarousel\r\n\t\t\t\t\ttouchTrackingEnabled={true}\r\n\t\t\t\t\tdotsDisabled={true}\r\n\t\t\t\t\tresponsive={responsive}\r\n\t\t\t\t\tmouseTrackingEnabled={true}>\r\n\t\t\t\t\t{carouselItems}\r\n\t\t\t\t</AliceCarousel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default carousel;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport GenresDetails from \"../components/Details/GenresDetails\";\r\nimport PersonLinkDetails from \"../components/Details/PersonLinkDetails\";\r\nimport CastDetails from '../components/Details/CastDetails';\r\nimport Rating from '../components/Rating/Rating';\r\nimport Carousel from '../components/Carousel';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nconst MovieDetailsPage = () => {\r\n\tlet movieDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [movieData, setMovieData] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'movie',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetMovieData(details.response);\r\n\t\t}\r\n\t}, [details.response]);\r\n\r\n\tconst convertRuntime = num => {\r\n\t\tlet hours = num / 60;\r\n\t\tlet convertHours = Math.floor(hours);\r\n\t\tlet minutes = (hours - convertHours) * 60;\r\n\t\tlet convertMinutes = Math.round(minutes);\r\n\t\treturn `${convertHours}hr ${convertMinutes}min`;\r\n\t};\r\n\r\n\tlet background = null;\r\n\r\n\tif(movieData) {\r\n\t\tconsole.log(movieData);\r\n\t\tif(movieData.backdrop_path !== null) background = {backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`};\r\n\r\n\t\tmovieDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\"\r\n\t\t\t\t     style={background} />\r\n\t\t\t\t<div className=\"movie details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={movieData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{movieData.title}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {convertRuntime(movieData.runtime)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={movieData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Directors <span><PersonLinkDetails type=\"director\" fullData={movieData.credits.crew}/></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Written <span><PersonLinkDetails type=\"writer\" fullData={movieData.credits.crew} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{moment(movieData.release_date).format('D MMMM YYYY')}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Budget</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.budget > 0 ? currencyFormatter.format(movieData.budget, { code: 'USD', decimalDigits: 0 }) : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Revenue</h3>\r\n\t\t\t\t\t\t\t\t<p>{movieData.revenue > 0 ? currencyFormatter.format(movieData.revenue, { code: 'USD', decimalDigits: 0 }) : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={movieData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={movieData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<p className=\"tagline\">{movieData.tagline}</p>\r\n\t\t\t\t\t\t\t\t<Rating\r\n\t\t\t\t\t\t\t\t\ttitle=\"Rating\"\r\n\t\t\t\t\t\t\t\t\tid={movieData.imdb_id}\r\n\t\t\t\t\t\t\t\t\timdb={true}\r\n\t\t\t\t\t\t\t\t\tmeta={true}\r\n\t\t\t\t\t\t\t\t\ttmdb={movieData.vote_average}/>\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={movieData.overview}/>\r\n\t\t\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\t\t\tclassName=\"carousel\"\r\n\t\t\t\t\t\t\t\t\talt={movieData.title}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Photos\"\r\n\t\t\t\t\t\t\t\t\timages={movieData.images.backdrops}/>\r\n\t\t\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\t\t\tclassName=\"carousel\"\r\n\t\t\t\t\t\t\t\t\talt={movieData.title}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Videos\"\r\n\t\t\t\t\t\t\t\t\tvideos={movieData.videos.results}/>\r\n\t\t\t\t\t\t\t\t<CastDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Cast\"\r\n\t\t\t\t\t\t\t\t\tdata={movieData.credits.cast}\r\n\t\t\t\t\t\t\t\t\tnumber={12}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tmovieDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{movieDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default MovieDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { MdTimer } from 'react-icons/md'\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails'\r\nimport Img from '../components/ImgLoader'\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport GenresDetails from '../components/Details/GenresDetails';\r\nimport PersonLinkDetails from '../components/Details/PersonLinkDetails'\r\nimport moment from 'moment';\r\nimport CastDetails from '../components/Details/CastDetails';\r\nimport Rating from '../components/Rating/Rating';\r\nimport Carousel from \"../components/Carousel\";\r\n\r\nconst SeriesDetailsPage = () => {\r\n\tlet seriesDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [seriesData, setSeriesData] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'tv',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetSeriesData(details.response);\r\n\t\t}\r\n\t}, [details.response]);\r\n\r\n\tlet background = null;\r\n\r\n\tif(seriesData) {\r\n\t\tif(seriesData.backdrop_path !== null) background = {backgroundImage: `url(https://image.tmdb.org/t/p/original${seriesData.backdrop_path})`};\r\n\t\tseriesDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"details__background\" style={background} />\r\n\t\t\t\t<div className=\"series details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={seriesData.poster_path}\r\n\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{seriesData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__time\">\r\n\t\t\t\t\t\t\t\t<span className=\"details__content__head__time__icon\"><MdTimer /></span> {seriesData.episode_run_time[0]} min\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Genres <span><GenresDetails data={seriesData.genres} /></span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Date <span>{moment(seriesData.first_air_date).format('YYYY')} - {moment(seriesData.last_air_date).format('YYYY')}</span></p>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Creators <span><PersonLinkDetails data={seriesData.created_by} /></span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Release date</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.release_date}</p>\r\n\t\t\t\t\t\t\t\t<h3>Status</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.status}</p>\r\n\t\t\t\t\t\t\t\t<h3>Total episodes</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_episodes > 0 ? seriesData.number_of_episodes : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Seasons</h3>\r\n\t\t\t\t\t\t\t\t<p>{seriesData.number_of_seasons > 0 ? seriesData.number_of_seasons : 'N/A' }</p>\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={seriesData.homepage}\r\n\t\t\t\t\t\t\t\t\ttitle={seriesData.title}\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">Link</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<Rating\r\n\t\t\t\t\t\t\t\t\ttitle=\"Rating\"\r\n\t\t\t\t\t\t\t\t\tid={seriesData.imdb_id}\r\n\t\t\t\t\t\t\t\t\timdb={true}\r\n\t\t\t\t\t\t\t\t\tmeta={true}\r\n\t\t\t\t\t\t\t\t\ttmdb={seriesData.vote_average}/>\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttagline={seriesData.tagline}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Plot\"\r\n\t\t\t\t\t\t\t\t\toverview={seriesData.overview}/>\r\n\t\t\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\t\t\ttype=\"image\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"carousel\"\r\n\t\t\t\t\t\t\t\t\talt={seriesData.name}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Photos\"\r\n\t\t\t\t\t\t\t\t\timages={seriesData.images.backdrops}/>\r\n\t\t\t\t\t\t\t\t<Carousel\r\n\t\t\t\t\t\t\t\t\tclassName=\"carousel\"\r\n\t\t\t\t\t\t\t\t\ttitle=\"Videos\"\r\n\t\t\t\t\t\t\t\t\tvideos={seriesData.videos.results}/>\r\n\t\t\t\t\t\t\t\t<CastDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Cast\"\r\n\t\t\t\t\t\t\t\t\tdata={seriesData.credits.cast}\r\n\t\t\t\t\t\t\t\t\tnumber={12}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tseriesDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{seriesDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default SeriesDetailsPage;","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport fetchingData from '../hooks/FetchingData';\r\nimport NoDetails from '../components/Details/NoDetails';\r\nimport PlotDetails from '../components/Details/PlotDetails';\r\nimport Img from '../components/ImgLoader'\r\nimport moment from 'moment';\r\n\r\nconst PersonDetailsPage = () => {\r\n\tlet personDetails;\r\n\tconst params = useParams();\r\n\r\n\tconst [personData, setPersonData] = useState(null);\r\n\r\n\tconst details = fetchingData({\r\n\t\tqueryType: 'person',\r\n\t\tdetailsID: params.id\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (details.response !== null) {\r\n\t\t\tsetPersonData(details.response);\r\n\t\t}\r\n\t}, [details.response]);\r\n\r\n\tif(personData) {\r\n\r\n\t\tpersonDetails = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"person details__background\" />\r\n\t\t\t\t<div className=\"person details__content\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"details__content__poster\">\r\n\t\t\t\t\t\t\t<Img\r\n\t\t\t\t\t\t\t\tsrc={personData.profile_path}\r\n\t\t\t\t\t\t\t\twidth={210}\r\n\t\t\t\t\t\t\t\theight={315}\r\n\t\t\t\t\t\t\t\ttype=\"w200\"\r\n\t\t\t\t\t\t\t\tstyled=\"details__content__poster__image\"\r\n\t\t\t\t\t\t\t\ttitle={personData.name}\r\n\t\t\t\t\t\t\t\ttext=\"No Image\"/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__head\">\r\n\t\t\t\t\t\t\t<h1 className=\"details__content__head__title\">{personData.name}</h1>\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Born\t<span>\r\n\t\t\t\t\t\t\t\t{personData.birthday ? moment(personData.birthday).format('MMM D, YYYY') : 'N/A'} in {personData.place_of_birth ? personData.place_of_birth : 'N/A'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{personData.deathday ? <p className=\"details__content__head__credit\">Death <span>{moment(personData.deathday).format('MMM D, YYYY')}</span></p> : null}\r\n\t\t\t\t\t\t\t<p className=\"details__content__head__credit\">Know for <span>{personData.known_for_department}</span></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className=\"details__content__body\">\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm={12} md={3} className=\"details__content__body__short\">\r\n\t\t\t\t\t\t\t\t<h3>Official website</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.homepage ?\t<a href={personData.homepage} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<h3>Imdb Link</h3>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t{ personData.imdb_id ? <a href={`https://www.imdb.com/name/${personData.imdb_id}`} rel=\"noopener noreferrer\" target=\"_blank\">Link</a> : 'N/A' }\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm={12} md={9} className=\"details__content__body__plot\">\r\n\t\t\t\t\t\t\t\t<PlotDetails\r\n\t\t\t\t\t\t\t\t\ttitle=\"Biography\"\r\n\t\t\t\t\t\t\t\t\toverview={personData.biography}/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\tpersonDetails = (\r\n\t\t\t<NoDetails />\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{personDetails}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default PersonDetailsPage;","import React from 'react';\r\n\r\nconst errorPage = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className=\"mainContent__title\">Oops! Page not found!</h2>\r\n\t\t\t<div className=\"error404\">\r\n\t\t\t\t<div className=\"glitch\" data-text=\"404\">404</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default errorPage;","import React, { useEffect, useState,  Suspense} from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header/Header';\r\nimport Loading from '../components/Loading';\r\nimport ScrollToTop from '../components/ScrollToTop';\r\nimport { Container } from 'react-bootstrap';\r\nimport { FaReact, FaBootstrap } from 'react-icons/fa'\r\nimport HomePage from '../pages/HomePage';\r\nimport ListPage from '../pages/ListPage';\r\nimport SearchPage from '../pages/SearchPage';\r\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\r\nimport SeriesDetailsPage from '../pages/SeriesDetailsPage';\r\nimport PersonDetailsPage from '../pages/PersonDetailsPage';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport fetchingData from '../hooks/FetchingData';\r\n\r\n\r\nfunction App() {\r\n    //const [page, setPage] = useState(1);\r\n\r\n    const [ nowPlayingMovies, setNowPlayingMovies ] = useState(null);\r\n    const [ popularMovies, setPopularMovies ] = useState(null);\r\n    const [ upcomingMovies, setUpcomingMovies ] = useState(null);\r\n    const [ popularSeries, setPopularSeries ] = useState(null);\r\n\r\n    let history = useHistory();\r\n\r\n    /* const handleShowMore = () => {\r\n        setPage(page + 1);\r\n        console.log('show more');\r\n    };*/\r\n\r\n    const getSearch = (searchValue, searchType) => {\r\n        if(searchValue && searchType) {\r\n            history.push(`/search/${searchType}/${searchValue}`);\r\n        }\r\n    }\r\n\r\n    const popularData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    const nowPlayingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'now_playing',\r\n        page: 1\r\n    });\r\n\r\n    const upcomingData = fetchingData({\r\n        queryType: 'movie',\r\n        listType: 'upcoming',\r\n        page: 1\r\n    });\r\n\r\n    const popularSeriesData = fetchingData({\r\n        queryType: 'tv',\r\n        listType: 'popular',\r\n        page: 1\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (popularData.response !== null) {\r\n            setPopularMovies(popularData.response);\r\n        }\r\n        if (upcomingData.response !== null) {\r\n            setUpcomingMovies(upcomingData.response);\r\n        }\r\n        if (nowPlayingData.response !== null) {\r\n            setNowPlayingMovies(nowPlayingData.response);\r\n        }\r\n        if (popularSeriesData.response !== null) {\r\n            setPopularSeries(popularSeriesData.response);\r\n        }\r\n    }, [popularData.response, upcomingData.response, nowPlayingData.response, popularSeriesData.response]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header\r\n                title=\"Movie Search\"\r\n                search={getSearch}\r\n            />\r\n            <Container className=\"mainContent\">\r\n                <Suspense fallback={<Loading />}/>\r\n                <ScrollToTop />\r\n                <Switch>\r\n                    <Route path=\"/upcoming\">\r\n                        <ListPage\r\n                            listData={upcomingMovies}\r\n                            title=\"Upcoming Movies\"\r\n                            loading={upcomingData.loading}\r\n                            type=\"upcoming\"/>\r\n                    </Route>\r\n                    <Route path=\"/popular\">\r\n                        <ListPage\r\n                            listData={popularMovies}\r\n                            loading={popularData.loading}\r\n                            title=\"Popular Movies\"\r\n                            type=\"popular\"/>\r\n                    </Route>\r\n                    <Route path=\"/now_playing\">\r\n                        <ListPage\r\n                            listData={nowPlayingMovies}\r\n                            loading={nowPlayingData.loading}\r\n                            title=\"Now Playing Movies\"\r\n                            type=\"now_playing\"/>\r\n                    </Route>\r\n                    <Route path=\"/movie_details/:id\" component={MovieDetailsPage} />\r\n                    <Route path=\"/series_details/:id\" component={SeriesDetailsPage} />\r\n                    <Route path=\"/person_details/:id\" component={PersonDetailsPage} />\r\n                    <Route exact path=\"/\">\r\n                        <HomePage\r\n                            upcomingMoviesData={upcomingMovies}\r\n                            popularMoviesData={popularMovies}\r\n                            nowPlayingMoviesData={nowPlayingMovies}\r\n                            popularSeriesData={popularSeries}\r\n                            number={10}/>\r\n                    </Route>\r\n                    <Route path=\"/search/:type/:query\">\r\n                        <SearchPage\r\n                            page={1}\r\n                            title=\"Search\"\r\n                            type=\"search\"/>\r\n                    </Route>\r\n                    <Route component={ErrorPage} />\r\n                </Switch>\r\n            </Container>\r\n            <footer>\r\n                <p><FaReact /> <FaBootstrap /></p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <App />\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}